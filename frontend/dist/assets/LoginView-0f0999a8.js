import{d as w,r as i,w as m,h as k,c as t,u as l,a as e,e as d,i as L,j as V,f as _,g as v,k as h,F as b,l as f,o as n}from"./index-12038800.js";const x={key:0},C=e("h1",null,"Loading...",-1),N=[C],E={key:1},T=e("h1",null,"Login for the name game!",-1),j=e("p",null,"Enter your email and password to login, if you do not have a username and password yet, register first",-1),B={key:0},P={class:"important"},R={key:0,class:"important-content green"},S=e("br",null,null,-1),U={key:1,class:"important-content red"},q=e("p",null,"Login failed!",-1),F=[q],O=e("label",{for:"email"},"Email:",-1),A=e("label",{for:"password"},"Password:",-1),D="/api/names",M=w({__name:"LoginView",setup(I){const p=i(null);m(async()=>{const a=`${D}`;p.value=await(await fetch(a)).json()});const r=i(""),u=i("");var o=i("");m(()=>{o.value=""});const g=async()=>{const a={email:r.value,password:u.value};try{(await fetch("/api/voters/login",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(a)})).ok?(console.log("Login successful"),o.value="success",f.push({path:"/voting"}).then(()=>{f.go(0)})):(console.error("Login failed"),o.value="failure")}catch(s){console.error("Error:",s)}};return(a,s)=>{const y=k("RouterLink");return n(),t(b,null,[p.value?(n(),t("div",E,[T,j,l(o)==="success"||l(o)==="failure"?(n(),t("div",B,[e("div",P,[l(o)==="success"?(n(),t("div",R,[e("p",null,[d("Login successful! "),S,d("Now you can "),L(y,{to:"/voting"},{default:V(()=>[d("Vote!")]),_:1})])])):_("",!0),l(o)==="failure"?(n(),t("div",U,F)):_("",!0)])])):_("",!0)])):(n(),t("div",x,N)),e("div",null,[e("form",null,[O,v(e("input",{type:"email",id:"email","onUpdate:modelValue":s[0]||(s[0]=c=>r.value=c),required:""},null,512),[[h,r.value]]),A,v(e("input",{type:"password",id:"password","onUpdate:modelValue":s[1]||(s[1]=c=>u.value=c),required:""},null,512),[[h,u.value]]),e("button",{type:"submit",onClick:g},"Login")])])],64)}}});export{M as default};
